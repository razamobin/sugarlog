x make form show on new page
x make new page post to new
x add post handler for new to just print post vals individually
x add logic to save hashes to redis
x test save, do many submits
x test sorting using cli
x iterate to fix any issues
x write sort in main func
x write a non-styled ui index page to get the entries
x markup
x style it somehow
x polish layouts etc
    x add link to new
    x add h1, style it
x set it up on ec2 instance
    x set up redis
    x put redis in fsync every second mode
    x set up code 
    x test it out

(continued) need to figure out automated deployment strategy 
    x make small change to python code
    x deploy it to server 
    x see if new change is live
    x if so great nope
    x if not, need to look into restarting uwsgi to reload the python code
        x ... just send HUP signal to master process

x need to figure out version control for app (probably github)
    x research a good hosted version control system - github public (free!)
    x set up the system (register, create repo, etc)
    x checkin current state of sugarlog

x automate it (need to write pid to file)
    x learn about fabric
    x write a fabric file to fetch from version control (py file, templates dir, static dir), scp to server, HUP master process so children are restarted
    (later) restart uwsgi, and have it save master process pid to some standard location
    x test a few changes to the site (exciting !)
    x possibly combine git commit -a, and push origin master into fabfile (ask for user input on commit message)
    x figure out why git output doesnt show up in fabric - ans: local doesnt print by default

x style to add more contrast
    2 column layout and put dates on the left (look at http://ministryoftype.co.uk/)
    style the comments a bit better, put down Raza says ...

    data to display:
        the day (dec 1st)
        new entry link

        entry
            blood sugar, time, notes
            comments

    focus on    
        vertical rhythm
        visual hierarchy
        type only plus lines and boxes
        no color at first just grays
        clean markup

x clean up comment ui so you can click a link to reply
    x need entry id to be passed to ui
    x create an automatic form under the latest comment, or under the post with all the needed fields
    x prefill the author with Raza or Pervez based on previous comment's author
    x test submissions
    x make it ajax appear, reply links should be pink, dotted underline
        x add id to each comment form
        x add reply link
        x include jquery lib
        x add handler to reply link
    x style the form, link to my liking (lol will take years)
    x test and deploy

x add comments support - so i can make suggestions to dad (probably make it somewhat generic so we can make comments back and forth)
    x every post has list of comments in reverse chrono order
    x every comment has author, and comment text, and date
    x start with new ui page
        x submit the post id, name, comment, auto save date
        x on new submit
            x incr global comment id
            x create top level comment hash with necessary data
            x add comment id to list field on the post hash
    x add logic to show the comments

x make a fabfile for setting up a brand new ubuntu instance with the production env (uwsgi, cherokee/config, python libs, git src, start servers)
x add uwsgi.xml to git
x add a way to make production use a different config file (DEBUG = False)

add email/text message notifications for new posts, so i get an email when he posts or comments, and he gets an email when i post
    wget --post-data 'From=858-367-9918&To=858-663-2602&Body=razacool' https://AC42de1d02120c4ee461f62f80a06d81f9:4a229a87dd612a30a7cfac5255fe318b@api.twilio.com/2010-04-01/Accounts/AC42de1d02120c4ee461f62f80a06d81f9/SMS/Messages
    x start with messages to me
    x make it async
    add messages for each reply (maybe talk to dad first)
    add info about author, date, entry 
    change generic link to link to specific entry/comment

insert current time by default, add ability to enter manual time
change deployment to copy to new dir, and use symlink, start new uwsgi, update cherokee, decommision old uwsgi
add edits to comments, and to entries
add logins for me and dad, so other people can view only

potential features:
auto highlight the foods or give me a ui to do that or something / add ability for me to highlight items in the list that are good, bad, neutral
blood sugar graphs, insulin graphs
make fabric script for syncing local db with production
make notes about particular food items, clickable links
could show it to paleonu, paleohacks users as an example of the improvements a diabetic can make to life and blood sugar, see if people want to use the same thing, make it generic
hackernews, facebook, any/all friends
mark blood sugar as good/bad
(prob not) iphone/ipad app?

by 2010 my dad had been a diabetic for nearly 30 years
at the time, i had recently read up on numerous online nutritional resources, especially relating to helping diabetics (see paleonu, high-fat-nutrition, bernstein)
i was convinced by my own experimentation that this was the way humans were meant to eat, and so i encouraged my 
dad to eat the same
within a few months his daily insulin dosage dropped from 70 to 30, his a1c dropped from 9 to 6, and he felt better and more energetic in more than 10 years
this is a log of his journey from 30 units a day to zero (typos and all)

todo 12/8
---

x write automated server setup script (start w clean ubuntu, get uwsgi, cherokee, get sugarlog src, get libs, config cherokee, config sugar log, start everything)
write a new deploy script to swap uwsgis, etc

x test it all out a few times

add registration and login
    add flash messages
    test/polish up all the interactions and the nav/ui
    x front page link / main nav
    x backend func, bcrypt
    x ui page
    x start with /login, no unstyled page
        fields are name, email, password
        need
            authenticate
                take in email, pass, hash the pass and make sure it matches the hash in the db
                get username:raza.mobin@gmail.com, 1
                hash the pass and see if it matches
                set session['user_id'] = uid
                
            signup
                uid:1:username = raza.mobin@gmail.com
                uid:1:pass = abc123
                username:raza.mobin@gmail.com:uid = 1
        next_user_id
        logout

dont require it until dad is logged in
once logged in you can reply without typing in your name
anon users cannot reply or post
only dad can post

with logins i can start adding logic to show what is new since you last visited, also to show notifications of what's new in the top area, text / emails etc

organize template files, refactor common html
consolidate css
make all pages look similar and have same main nav (if applicable)

add tests for all current functionality, also add selenium tests

speed up the main page (down to 250ms or less RTT)
x gzip
pagination
other options

create a url for dad like sugarlog.com/pervez

highlight newest posts - so it will highlight posts that have been made since you last logged in and saw that page
